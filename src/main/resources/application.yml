server:
  port: 8080 # Spring Boot 项目运行的端口
#  port: 9999 # Spring Boot 项目运行的端口

spring:
  application:
    name: RentHub

  #  配置数据库连接信息
  datasource:
    url: jdbc:mysql://localhost:3306/rent_hub
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: abcd1234

  # --- Redis 连接配置 ---
  # Spring Boot 的 Redis 连接配置 (Sa-Token 会自动使用这里的配置)
  data:
    redis:
      # Redis数据库索引（默认为0）
      database: 0
      # Redis服务器地址
      host: 127.0.0.1
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      # password:
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 200
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 10
          # 连接池中的最小空闲连接
          min-idle: 0
  graphql:
    cors:
      allowed-origins: http://localhost:5173


#mybatis配置
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  global-config:
    db-config:
      id-type: auto
  configuration:
#   保持注释 将其日志输出委托给SLF4J处理
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    default-enum-type-handler: com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler #枚举处理器

# 日志配置
logging:
  level:
    # 设置根日志级别为INFO，这是默认值，可以不写，但写出来更清晰
    root: info
    # 设置你的项目主包的日志级别为DEBUG，这样你代码中的log.debug()就能显示了
    renthub: debug
    # (关键) 设置MyBatis的Mapper接口日志级别为DEBUG，这样就能看到执行的SQL语句
    renthub.mapper: debug
  # 配置日志输出格式
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"


############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 120
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
#  token-style: uuid

  # 是否输出操作日志
  is-log: true
  # jwt秘钥
  jwt-secret-key: Bai5




#  # C端用户 LoginType 配置
#  user:
#    token-name: user_token # 用户端token名称
#    timeout: 2592000 # 30天
#    is-concurrent: true # 用户端允许多端登录
#
#  # B端员工 LoginType 配置
#  emp:
#    token-name: emp_token # 员工端token名称
#    timeout: 86400 # 1天
#    is-concurrent: false # 员工端不允许多端登录，后登录踢掉前登录




#阿里云OSS
#aliyun:
#  oss:
#    endpoint:oss-cn-beijing.aliyuncs.com
#
